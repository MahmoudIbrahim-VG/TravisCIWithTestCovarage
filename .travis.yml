#sudo: false
#language: android
#jdk: oraclejdk8
#
#android:
#  components:
#    - android-27
#    - build-tools-27.0.3
#
#before_cache:
# - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
# - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
#
#cache:
# directories:
# - $HOME/.gradle/caches/
# - $HOME/.gradle/wrapper/
#
#env:
#  global:
#   # install timeout in minutes (2 minutes by default)
#    - ADB_INSTALL_TIMEOUT=20
#
#
#before_install:
#          - mkdir "$ANDROID_HOME/licenses" || true
#          - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
#          - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
#          - chmod +x ./gradlew
#
## Run assemble, unit tests, and create coverage report
#script:
#   - ./gradlew clean
#   - ./gradlew build
#   - ./gradlew assembleDebug
#   - ./gradlew assembleDebugAndroidTest

#  - ./gradlew clean assembleDebug assembleRelease testDebug createDebugUnitTestCoverageReport
#  # Renaming folder and files of reports so codecov.io can find it
#  - mv app/build/reports/jacoco/createDebugUnitTestCoverageReport app/build/reports/jacoco/jacocoTestDebugUnitTestReport
#  - mv app/build/reports/jacoco/jacocoTestDebugUnitTestReport/createDebugUnitTestCoverageReport.xml app/build/reports/jacoco/jacocoTestDebugUnitTestReport/jacocoTestDebugUnitTestReport.xml
#  # Codecov.io
#  - bash <(curl -s https://codecov.io/bash)






#sudo: false
#language: android
#jdk: oraclejdk8
#before_cache:
# - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
# - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
#
#cache:
# directories:
# - $HOME/.gradle/caches/
# - $HOME/.gradle/wrapper/
#env:
#  global:
#   - ANDROID_API_LEVEL=25
#   - EMULATOR_API_LEVEL=21
#   - ANDROID_BUILD_TOOLS_VERSION=25.0.2
#   - ANDROID_ABI=google_apis/armeabi-v7a
#   - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)
#
#android:
#  components:
#    - tools
#    - platform-tools
#    - build-tools-25.0.2
#    - android-25
#    - extra-google-m2repository
#    - extra-android-m2repository
#
#    # Google Play Services
#    - extra-google-google_play_services
#
#    # Support library
#    - extra-android-support
#    - addon-google_apis-google-$ANDROID_API_LEVEL
#    - addon-google_apis-google-$EMULATOR_API_LEVEL
#    - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API_LEVEL
#    - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API_LEVEL
#
#before_script:
#  - echo no | android create avd --force -n test -t android-21 --abi armeabi-v7a
#  - emulator -avd test -no-skin -no-audio -no-window &
#  - android-wait-for-emulator
#  - adb shell input keyevent 82 &
#
#script:
#        - ./gradlew clean
#        - ./gradlew assembleDebug
#        - ./gradlew assembleDebugAndroidTest
#
#
#before_install:
#          - mkdir "$ANDROID_HOME/licenses" || true
#          - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
#          - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
#          - chmod +x gradlew

language : android
env:
  global :
    - ANROID_API_LEVEL = "26"

#android :
#  components :
#    - tools
#    - platform-tools
#    - tools
#    - android - $ANDROID_API_LEVEL
#    - extra-google-google_play_services
#    - extra-google-m2repository
#    - addon-google_apis-google-$ANDROID_API_LEVEL
#  licences :
#    - 'android-sdk-preview-license-.+'
#    - 'android-sdk-license-.+'
#    - 'google-gdk-license-.+'

android:
  components:
    - build-tools-26.0.2
    - android-26
    - sys-img-armeabi-v7a-android-tv-l
    - add-on
    - extra

  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

# Emulator Management: Create, Start and Wait
before_script:
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

script :
    - ./gradlew build connectedCheck

before_install:
- chmod +x gradlew